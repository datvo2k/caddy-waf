name: Build and Release Caddy with WAF

on:
  push:
    tags:
      - 'v*' # Trigger only on tags that start with 'v' (e.g., v1.0.0)
  workflow_dispatch: # Added workflow_dispatch trigger

jobs:
  build:
    name: Build for ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        goos: [darwin, linux, windows]
        arch: [amd64, arm64]
        include:
          - os: macos-latest
            goos: darwin
            arch: amd64
          - os: macos-latest
            goos: darwin
            arch: arm64
          - os: ubuntu-latest
            goos: linux
            arch: amd64
          - os: ubuntu-latest
            goos: linux
            arch: arm64
          - os: windows-latest
            goos: windows
            arch: amd64
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
            go-version: '>=1.20'

      - name: Install xcaddy
        run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
      
      - name: Download GeoLite2 Country DB
        run: wget https://git.io/GeoLite2-Country.mmdb

      - name: Build Caddy with WAF module
        run: |
          mkdir -p buildenv_${{ matrix.os }}_${{ matrix.arch }}
          cd buildenv_${{ matrix.os }}_${{ matrix.arch }}
          cp ../GeoLite2-Country.mmdb ./
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.arch }} xcaddy build --with github.com/fabriziosalmi/caddy-waf=../
      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v4 # Updated to V4
        with:
          name: caddy-waf-${{ matrix.goos }}-${{ matrix.arch }}
          path: buildenv_${{ matrix.os }}_${{ matrix.arch }}/caddy
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # Only run release on tag push
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Github release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload release artifacts - darwin amd64
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: caddy-waf-darwin-amd64/caddy
            asset_name: caddy-waf_darwin_amd64
            asset_content_type: application/octet-stream
      - name: Upload release artifacts - darwin arm64
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: caddy-waf-darwin-arm64/caddy
            asset_name: caddy-waf_darwin_arm64
            asset_content_type: application/octet-stream
      - name: Upload release artifacts - linux amd64
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: caddy-waf-linux-amd64/caddy
            asset_name: caddy-waf_linux_amd64
            asset_content_type: application/octet-stream
      - name: Upload release artifacts - linux arm64
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: caddy-waf-linux-arm64/caddy
            asset_name: caddy-waf_linux_arm64
            asset_content_type: application/octet-stream
      - name: Upload release artifacts - windows amd64
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            upload_url: ${{ github.event.release.upload_url }}
            asset_path: caddy-waf-windows-amd64/caddy.exe
            asset_name: caddy-waf_windows_amd64.exe
            asset_content_type: application/octet-stream
